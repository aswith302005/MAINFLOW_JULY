import tkinter as tk
from tkinter import ttk, messagebox
import requests

class CurrencyConverterApp:
    def _init_(self, root, api_key):
        self.root = root
        self.api_key = api_key
        self.rates = {}

        self.root.title("USD Currency Converter")

        self.amount_label = tk.Label(root, text="Amount in USD:")
        self.amount_label.grid(row=0, column=0, padx=10, pady=10)

        self.amount_entry = tk.Entry(root)
        self.amount_entry.grid(row=0, column=1, padx=10, pady=10)

        self.currency_label = tk.Label(root, text="Convert to:")
        self.currency_label.grid(row=1, column=0, padx=10, pady=10)

        self.currency_var = tk.StringVar(root)
        self.currency_dropdown = ttk.Combobox(root, textvariable=self.currency_var)
        self.currency_dropdown.grid(row=1, column=1, padx=10, pady=10)

        self.convert_button = tk.Button(root, text="Convert", command=self.convert_currency)
        self.convert_button.grid(row=2, column=0, columnspan=2, padx=10, pady=10)

        self.result_label = tk.Label(root, text="")
        self.result_label.grid(row=3, column=0, columnspan=2, padx=10, pady=10)

        self.refresh_button = tk.Button(root, text="Refresh Rates", command=self.refresh_rates)
        self.refresh_button.grid(row=4, column=0, columnspan=2, padx=10, pady=10)

        self.refresh_rates()

    def refresh_rates(self):
        try:
            self.rates = self.get_exchange_rates()
            self.currency_dropdown['values'] = list(self.rates.keys())
            messagebox.showinfo("Success", "Exchange rates updated successfully!")
        except Exception as e:
            messagebox.showerror("Error", str(e))

    def get_exchange_rates(self):
        url = f"https://v6.exchangerate-api.com/v6/{self.api_key}/latest/USD"
        response = requests.get(url)
        data = response.json()
        if response.status_code == 200:
            return data['conversion_rates']
        else:
            raise Exception("Error fetching exchange rates: " + data.get("error-type", "Unknown error"))

    def convert_currency(self):
        try:
            amount = float(self.amount_entry.get())
            target_currency = self.currency_var.get()
            if target_currency not in self.rates:
                raise ValueError("Select a valid target currency")
            result = self.convert_usd_to_currency(amount, target_currency)
            self.result_label.config(text=f"{amount} USD = {result:.2f} {target_currency}")
        except ValueError as ve:
            messagebox.showerror("Error", str(ve))
        except Exception as e:
            messagebox.showerror("Error", str(e))

    def convert_usd_to_currency(self, amount, target_currency):
        if target_currency not in self.rates:
            raise ValueError("Invalid target currency")
        return amount * self.rates[target_currency]

if _name_ == "_main_":
    API_KEY = "f65e699f38ddca82cf170430"  # Replace with your actual API key
    root = tk.Tk()
    app = CurrencyConverterApp(root, API_KEY)
    root.mainloop()
